TODOs:
- make worker store html in database instead of file system
- grab and display favicons for each linkItem
- create 2 angular views, 1 for bullets and 1 for thumbs
- consider fetching html from db once and store in memory on the server
- handle sending and receiving multiple linkItems in POST request, not just 1
- migrate serverside code to separate repo instead of web historian
- fix issue where title is not appearing for some, and/or filter them out
- create favicon for extension
- search the text on the page rather than the full html markup
- add 'clear' button to reset view rather than having to submit a blank query
- set chron job
- ignore certain sites (gmail, sites that require login like facebook, etc)


-type location.reload(true) in chrome devtools once the popup and devtools are open, and it will reload the popup and let you debug

- chrome extensions run as a local website that cant launch a server or external storage, but it can communicate with remote servers
- chrome extensions cannot execute inline js, so using angular is a bit tricky
- chrome extensions are a bit sandboxed, the popup cant communicate with chrome's APIs directly but it can communicate with a background page, and that background page can talk to chrome APIs
- the extension keys off of your chrome history, so even if you sometimes use a browser that doesnt have the extension (like say a pairing station or on your phone), using the extension later will still be able to search that history